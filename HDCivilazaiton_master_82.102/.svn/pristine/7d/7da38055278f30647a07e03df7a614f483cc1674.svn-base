package com.zhjy.hdcivilization.application;

import android.app.AppOpsManager;
import android.app.Application;
import android.content.Context;
import android.content.SharedPreferences;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.os.Debug;
import android.os.Handler;
import android.preference.PreferenceManager;

import com.lidroid.xutils.DbUtils;
import com.lidroid.xutils.exception.DbException;
import com.tencent.tauth.Tencent;
import com.zhjy.hdcivilization.dao.CivistateDao;
import com.zhjy.hdcivilization.dao.CommentDao;
import com.zhjy.hdcivilization.dao.ImgEntityDao;
import com.zhjy.hdcivilization.dao.UserDao;
import com.zhjy.hdcivilization.entity.ClickLikesState;
import com.zhjy.hdcivilization.entity.HDC_ApplyCheck;
import com.zhjy.hdcivilization.entity.HDC_Carousel;
import com.zhjy.hdcivilization.entity.HDC_CiviState;
import com.zhjy.hdcivilization.entity.HDC_CommentDetail;
import com.zhjy.hdcivilization.entity.HDC_MainNotice;
import com.zhjy.hdcivilization.entity.HDC_MainNumber;
import com.zhjy.hdcivilization.entity.HDC_Notice;
import com.zhjy.hdcivilization.entity.HDC_SuperviseMySubList;
import com.zhjy.hdcivilization.entity.HDC_SuperviseProblemList;
import com.zhjy.hdcivilization.entity.HDC_UserCommentList;
import com.zhjy.hdcivilization.entity.ImgEntity;
import com.zhjy.hdcivilization.entity.RecordUrl;
import com.zhjy.hdcivilization.entity.SystemSetting;
import com.zhjy.hdcivilization.entity.User;
import com.zhjy.hdcivilization.utils.FileUtils;
import com.zhjy.hdcivilization.utils.HDCivilizationConstants;
import com.zhjy.hdcivilization.utils.SDCardUtil;

import java.io.File;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.List;

/**
 * @author :huangxianfeng on 2016/7/19.
 */
public class MyApplication extends Application{


    private static Context context;//设置全局的Context
    /** 以下是关于定位的设置 */
    public static SharedPreferences sp ;//文件存储引用

    private static int myTid;
    public static MyApplication mainInstance;
    public static Handler handler;

    public static DbUtils dbUtils;

    public static Tencent mTencent;
    public static String shareLogoPath;
    public static String shareZinCodePath;
    public MyApplication(){
        handler=new Handler();
        mainInstance=this;
    }

    @Override
    public void onCreate() {
        super.onCreate();
        CrashHandler crashHandler= CrashHandler.getInstance();
        crashHandler.init(getApplicationContext());
        Debug.stopMethodTracing();
        sp= PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
        context = getApplicationContext();
        System.out.println("content = " + (context == null));
        //进行定义myTid
        this.myTid=android.os.Process.myTid();
        //进行handler定义
        handler = new Handler();

        //进行创建数据库
        createDatabase();

        //进行创建数据表
        createTables();

        //进行初始化qq分享的实例:
        mTencent = Tencent.createInstance(HDCivilizationConstants.QQ_APP_KEY, this);
        //将qq分享的默认图片进行设置
        shareLogoPath= SDCardUtil.getInstance().getUploadPicPath()+File.separator+"ic_launcher_logo.png";
        if(!FileUtils.getInstance().isExistsFile(shareLogoPath)){
            try {
                FileUtils.getInstance().writeToDir(getAssets().open("ic_launcher_logo.png"),shareLogoPath);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

        //将二维码放入到默认的图片文件夹中
        shareZinCodePath= SDCardUtil.getInstance().getUploadPicPath()+File.separator+"mineShare_zecode.png";
        if(!FileUtils.getInstance().isExistsFile(shareZinCodePath)){
            try {
                FileUtils.getInstance().writeToDir(getAssets().open("mine_share_code.png"),shareLogoPath);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

    /**
     * 进行初始化相关权限
     */
    private void initPermission(){

        try {
            //进行设置SsystemAlert提示框的权限:
            AppOpsManager  appOpsManager=//
                             (AppOpsManager)getSystemService(Context.APP_OPS_SERVICE);
            Method method=appOpsManager.getClass().getDeclaredMethod(//
                                    "setMode",Integer.class,Integer.class,//
                                                              String.class,Integer.class);
            method.invoke(appOpsManager,AppOpsManager.OPSTR_SYSTEM_ALERT_WINDOW,//
                                            getApplicationInfo().uid,getPackageName(),AppOpsManager.MODE_ALLOWED);
        } catch (NoSuchMethodException e) {
            e.printStackTrace();
        } catch (InvocationTargetException e) {
            e.printStackTrace();
        } catch (IllegalAccessException e) {
            e.printStackTrace();
        }
    }

    /**
     *
     */
    private void initData() {
        //进行模拟文明动态的数据循环
        HDC_CiviState hdc_civiState1;
        ImgEntity imgEntity;
        List<HDC_CiviState> civiList=new ArrayList<HDC_CiviState>();
        for(int i=0;i<10;++i){
            hdc_civiState1=new HDC_CiviState();
            imgEntity=new ImgEntity();
            hdc_civiState1.setTitle("zhangyang"+i);
            imgEntity.setImgUrl("nihao" + i);
            hdc_civiState1.setImgEntity(imgEntity);
            civiList.add(hdc_civiState1);
        }

        CivistateDao.getInstance().saveAllCivistateList(civiList);

        System.out.println("getCivistateDataList:" + CivistateDao.getInstance().getAllCivistateList().toString());
        System.out.println("getImgEntity List:"+ ImgEntityDao.getInstance().findAll().toString());

        //进行模拟文明评论的列表数据
        HDC_CommentDetail hdc_commentDetail;
        List<HDC_CommentDetail> hdc_commentDetailList=new ArrayList<HDC_CommentDetail>();

        for(int i=0;i<10;++i){
            List<ImgEntity> imgEntities=new ArrayList<ImgEntity>();
            hdc_commentDetail=new HDC_CommentDetail();
            for (int j = 0; j < 2; ++j) {
                imgEntity=new ImgEntity();
                imgEntity.setImgUrl("nihaole" + j);
                imgEntity.setItemIdAndItemType("123"+i);
                imgEntities.add(imgEntity);
            }
            ImgEntityDao.getInstance().saveAll(imgEntities);
            hdc_commentDetail.setItemIdAndType("123" + i);
            hdc_commentDetail.setTitle("zhangyang" + i);
            hdc_commentDetail.setImgUrlList(imgEntities);
            hdc_commentDetailList.add(hdc_commentDetail);
        }

        CommentDao.getInstance().saveAll(hdc_commentDetailList);
        System.out.println("getCommentDataList:" + CommentDao.getInstance().getAll().toString());
        System.out.println("getImgEntity List:"+ ImgEntityDao.getInstance().findAll().toString());


        /*******进行模拟用户表数据*******/
        User user = new User();
        user.setNickName("haungxianfeng");
        user.setUserId("123456");
        user.setIdentityState("1");

        User user1 = new User();
        user1.setNickName("haungxianfeng1");
        user1.setUserId("123455");
        user1.setIdentityState("2");

        UserDao.getInstance().saveAll(user);
        UserDao.getInstance().saveAll(user1);


    }


    /** 返回Context对象 */
    public static Context getContextObject(){
        return context;
    }

    /**
     * 进行获取主函数的ID
     */
    public static int getMainId(){
        return myTid;
    }

    /**
     * 获取handler对象
     */
    public static Handler getHandler(){
        return handler;
    }


    @Override
    public void onTerminate() {
        super.onTerminate();
    }


    /**
     * 进行创建数据表
     */
    private void createTables(){
        try{
            dbUtils.createTableIfNotExist(User.class);
            dbUtils.createTableIfNotExist(HDC_ApplyCheck.class);
            dbUtils.createTableIfNotExist(HDC_Carousel.class);
            dbUtils.createTableIfNotExist(HDC_CiviState.class);
            dbUtils.createTableIfNotExist(HDC_CommentDetail.class);
            dbUtils.createTableIfNotExist(HDC_MainNotice.class);
            dbUtils.createTableIfNotExist(HDC_MainNumber.class);
            dbUtils.createTableIfNotExist(HDC_SuperviseMySubList.class);
            dbUtils.createTableIfNotExist(HDC_SuperviseProblemList.class);
            dbUtils.createTableIfNotExist(ImgEntity.class);
            dbUtils.createTableIfNotExist(SystemSetting.class);
            dbUtils.createTableIfNotExist(HDC_UserCommentList.class);
            dbUtils.createTableIfNotExist(HDC_Notice.class);
            dbUtils.createTableIfNotExist(ClickLikesState.class);
            dbUtils.createTableIfNotExist(RecordUrl.class);
        } catch (DbException e) {
            e.printStackTrace();
//            进行抛出运行时异常
            throw new RuntimeException();
        }
    }

    private void createDatabase() {
        try {
            DbUtils.DaoConfig  daoConfig=new DbUtils.DaoConfig(this);
            daoConfig.setDbDir(getFilesDir().getAbsolutePath());
            daoConfig.setDbName("HDC_Civilization.db");
            daoConfig.setDbUpgradeListener(new DbUtils.DbUpgradeListener() {
                @Override
                public void onUpgrade(DbUtils dbUtils, int i, int i1) {
                    //当数据库的版本的更新的时候,进行处理的方法!
                    if(i==1 && i1==2){
                        //如果增加主题详情的topValue值
                        try {
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_CommentDetail add topValue int");
                            System.out.println("1");
                        } catch (DbException e) {
                            e.printStackTrace();
                            throw new RuntimeException();
                        }
                    }else if (i==1 && i1 == 3){
                        try {
                            //如果增加主题详情的topValue值
                            // //如果增加主题详情的commentCount值
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_CommentDetail add topValue int");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_CommentDetail add commentCount int");
                            System.out.println("2");
                        } catch (DbException e) {
                            e.printStackTrace();
                            throw new RuntimeException();
                        }

                    }else if (i==1 && i1 == 4){
                        try {
                            //如果增加主题详情的topValue值
                            // //如果增加主题详情的commentCount值
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_CommentDetail add topValue int");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_CommentDetail add commentCount int");
                            //增加我的上报中的 一级事件类型,二级事件类型,所属街道
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add streetBelong text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add firstEventType text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add secondEventType text \"\"");
                            System.out.println("2");
                        } catch (DbException e) {
                            e.printStackTrace();
                            throw new RuntimeException();
                        }

                    }else if (i==1 && i1 == 5){
                        try {
                            //如果增加主题详情的topValue值
                            // //如果增加主题详情的commentCount值
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_CommentDetail add topValue int");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_CommentDetail add commentCount int");
                            //增加我的上报中的 一级事件类型,二级事件类型,所属街道
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add streetBelong text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add firstEventType text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add secondEventType text \"\"");
                            //进行添加每天审核通过个数
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseProblemList add verifiedCountPerDay int");
                            //在问题统计里面进行绑定用户
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseProblemList add userId text \"\"");
                            //在我的提报里面进行绑定用户
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add userId text \"\"");
                            //在我的提报里面进行绑定不通过原因
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add unPassReason text \"\"");
                            //在申请志愿者查询的时候，绑定不通过原因
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_ApplyCheck add determinereason text \"\"");
                            System.out.println("2");
                        } catch (DbException e) {
                            e.printStackTrace();
                            throw new RuntimeException();
                        }

                    }else if(i==1 && i1 == 6){
                        try {
                            //如果增加主题详情的topValue值
                            // //如果增加主题详情的commentCount值
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_CommentDetail add topValue int");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_CommentDetail add commentCount int");
                            //增加我的上报中的 一级事件类型,二级事件类型,所属街道
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add streetBelong text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add firstEventType text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add secondEventType text \"\"");
                            //进行添加每天审核通过个数
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseProblemList add verifiedCountPerDay int");
                            //在问题统计里面进行绑定用户
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseProblemList add userId text \"\"");
                            //在我的提报里面进行绑定用户
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add userId text \"\"");
                            //在我的提报里面进行绑定不通过原因
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add unPassReason text \"\"");
                            //在申请志愿者查询的时候，绑定不通过原因
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_ApplyCheck add determinereason text \"\"");
                            System.out.println("2");

                            //进行添加User表中的发送验证码属性,最后登录时间属性
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_User add sendCode text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_User add lastLoginTime long");

                            //添加文明动态的时间
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_CiviState add publishTimeLong long");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_Notice add publishTimeLong long");


                        } catch (DbException e) {
                            e.printStackTrace();
                            throw new RuntimeException();
                        }
                    }else if (i==2 && i1==3){
                        try {
                             //如果增加主题详情的commentCount值
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_CommentDetail add commentCount int");
                            System.out.println("4");
                        } catch (DbException e) {
                            e.printStackTrace();
                            throw new RuntimeException();
                        }
                    }else if(i==2 && i1==4){
                        try {//增加我的上报中的 一级事件类型,二级事件类型,所属街道
                            //如果增加主题详情的commentCount值
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_CommentDetail add commentCount int");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add streetBelong text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add firstEventType text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add secondEventType text \"\"");
                            System.out.println("4");
                        } catch (DbException e) {
                            e.printStackTrace();
                            throw new RuntimeException();
                        }
                    }else if(i==2 && i1==5){
                        try {//增加我的上报中的 一级事件类型,二级事件类型,所属街道
                            //如果增加主题详情的commentCount值
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_CommentDetail add commentCount int");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add streetBelong text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add firstEventType text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add secondEventType text \"\"");

                            //进行添加每天审核通过个数
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseProblemList add verifiedCountPerDay int");
                            //在问题统计里面进行绑定用户
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseProblemList add userId text \"\"");
                            //在我的提报里面进行绑定用户
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add userId text \"\"");
                            //在我的提报里面进行绑定不通过原因
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add unPassReason text \"\"");
                            //在申请志愿者查询的时候，绑定不通过原因
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_ApplyCheck add determinereason text \"\"");

                            System.out.println("4");
                        } catch (DbException e) {
                            e.printStackTrace();
                            throw new RuntimeException();
                        }
                    }else if(i==2 && i1==6){
                        try {//增加我的上报中的 一级事件类型,二级事件类型,所属街道
                            //如果增加主题详情的commentCount值
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_CommentDetail add commentCount int");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add streetBelong text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add firstEventType text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add secondEventType text \"\"");

                            //进行添加每天审核通过个数
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseProblemList add verifiedCountPerDay int");
                            //在问题统计里面进行绑定用户
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseProblemList add userId text \"\"");
                            //在我的提报里面进行绑定用户
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add userId text \"\"");
                            //在我的提报里面进行绑定不通过原因
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add unPassReason text \"\"");
                            //在申请志愿者查询的时候，绑定不通过原因
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_ApplyCheck add determinereason text \"\"");

                            //进行添加User表中的发送验证码属性,最后登录时间属性
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_User add sendCode text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_User add lastLoginTime long");

                            //添加文明动态的时间
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_CiviState add publishTimeLong long");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_Notice add publishTimeLong long");
                            System.out.println("4");
                        } catch (DbException e) {
                            e.printStackTrace();
                            throw new RuntimeException();
                        }
                    }else if(i==3 && i1==4){
                        try {//增加我的上报中的 一级事件类型,二级事件类型,所属街道
//                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add streetBelong text \"\",firstEventType text,secondEventType text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add streetBelong text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add firstEventType text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add secondEventType text \"\"");
                            System.out.println("4");
                        } catch (DbException e) {
                            e.printStackTrace();
                            throw new RuntimeException();
                        }
                    }else if(i==3 && i1==5){
                        try {//增加我的上报中的 一级事件类型,二级事件类型,所属街道
//                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add streetBelong text \"\",firstEventType text,secondEventType text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add streetBelong text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add firstEventType text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add secondEventType text \"\"");


                            //进行添加每天审核通过个数
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseProblemList add verifiedCountPerDay int");
                            //在问题统计里面进行绑定用户
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseProblemList add userId text \"\"");
                            //在我的提报里面进行绑定用户
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add userId text \"\"");
                            //在我的提报里面进行绑定不通过原因
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add unPassReason text \"\"");
                            //在申请志愿者查询的时候，绑定不通过原因
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_ApplyCheck add determinereason text \"\"");

                            System.out.println("4");
                        } catch (DbException e) {
                            e.printStackTrace();
                            throw new RuntimeException();
                        }
                    }else if(i==3 && i1==6){
                        try {//增加我的上报中的 一级事件类型,二级事件类型,所属街道
//                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add streetBelong text \"\",firstEventType text,secondEventType text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add streetBelong text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add firstEventType text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add secondEventType text \"\"");


                            //进行添加每天审核通过个数
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseProblemList add verifiedCountPerDay int");
                            //在问题统计里面进行绑定用户
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseProblemList add userId text \"\"");
                            //在我的提报里面进行绑定用户
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add userId text \"\"");
                            //在我的提报里面进行绑定不通过原因
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add unPassReason text \"\"");
                            //在申请志愿者查询的时候，绑定不通过原因
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_ApplyCheck add determinereason text \"\"");

                            //进行添加User表中的发送验证码属性,最后登录时间属性
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_User add sendCode text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_User add lastLoginTime long");

                            //添加文明动态的时间
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_CiviState add publishTimeLong long");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_Notice add publishTimeLong long ");
                            System.out.println("4");
                        } catch (DbException e) {
                            e.printStackTrace();
                            throw new RuntimeException();
                        }
                    }else if(i==4 && i1==5){
                     //进行增加新的属性
                        try {
                            //进行添加每天审核通过个数
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseProblemList add verifiedCountPerDay int");
                            //在问题统计里面进行绑定用户
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseProblemList add userId text \"\"");
                            //在我的提报里面进行绑定用户
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add userId text \"\"");
                            //在我的提报里面进行绑定不通过原因
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add unPassReason text \"\"");
                            //在申请志愿者查询的时候，绑定不通过原因
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_ApplyCheck add determinereason text \"\"");


                            System.out.println("4");
                        } catch (DbException e) {
                            e.printStackTrace();
                            throw new RuntimeException();
                        }
                    }else if(i==4 && i1==6){
                        //进行增加新的属性
                        try {
                            //进行添加每天审核通过个数
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseProblemList add verifiedCountPerDay int");
                            //在问题统计里面进行绑定用户
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseProblemList add userId text \"\"");
                            //在我的提报里面进行绑定用户
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add userId text \"\"");
                            //在我的提报里面进行绑定不通过原因
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_SuperviseMySubList add unPassReason text \"\"");
                            //在申请志愿者查询的时候，绑定不通过原因
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_ApplyCheck add determinereason text \"\"");

                            //进行添加User表中的发送验证码属性,最后登录时间属性
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_User add sendCode text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_User add lastLoginTime long");

                            //添加文明动态的时间
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_CiviState add publishTimeLong long");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_Notice add publishTimeLong long");
                            System.out.println("4");
                        } catch (DbException e) {
                            e.printStackTrace();
                            throw new RuntimeException();
                        }
                    }else if(i==5 && i1==6){
                        //进行增加新的属性
                        System.out.println("i==5 && i1==6...update database");
                        try {
                            //进行添加User表中的发送验证码属性,最后登录时间属性
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_User add sendCode text \"\"");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_User add lastLoginTime long");

                            //添加文明动态的时间publishTimeLong
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_CiviState add publishTimeLong long");
                            dbUtils.execNonQuery("alter table com_zhjy_hdcivilization_entity_HDC_Notice add publishTimeLong long");
                        } catch (DbException e) {
                            e.printStackTrace();
                            throw new RuntimeException();
                        }
                    }
                }
            });
            PackageInfo packageInfo=getPackageManager().getPackageInfo(getPackageName(), PackageManager.GET_ACTIVITIES);
            daoConfig.setDbVersion(packageInfo.versionCode);

            dbUtils= DbUtils.create(daoConfig);
            dbUtils.configAllowTransaction(true);
            dbUtils.configDebug(true);
        } catch (PackageManager.NameNotFoundException e) {
            e.printStackTrace();
        }
    }

}
